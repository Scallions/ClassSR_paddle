[INFO]: current net device: eth0, ip: 172.28.1.218
[INFO]: paddle job envs:
POD_IP=job-2fae94d0199d07c9fac8f982c93a3614-trainer-0.job-2fae94d0199d07c9fac8f982c93a3614
PADDLE_PORT=12345
PADDLE_TRAINER_ID=0
PADDLE_TRAINERS_NUM=1
PADDLE_USE_CUDA=1
NCCL_SOCKET_IFNAME=eth0
PADDLE_IS_LOCAL=1
OUTPUT_PATH=/root/paddlejob/workspace/output
LOCAL_LOG_PATH=/root/paddlejob/workspace/log
LOCAL_MOUNT_PATH=/mnt/code_20210919012249,/mnt/datasets_20210919012249
JOB_ID=job-2fae94d0199d07c9fac8f982c93a3614
TRAINING_ROLE=TRAINER
[INFO]: user command: bash classSR_finetune.sh
[INFO]: start trainer
~/paddlejob/workspace/code /mnt
mkdir: cannot create directory `/root/paddlejob/workspace/output/tb_logger': File exists
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
WARNING: You are using pip version 21.2.3; however, version 21.2.4 is available.
You should consider upgrading via the '/opt/_internal/cpython-3.7.0/bin/python -m pip install --upgrade pip' command.
dataset: /root/paddlejob/workspace/train_data/datasets/data106261/class.zip
WARNING 2021-09-19 01:47:51,280 launch.py:359] Not found distinct arguments and compiled with cuda or xpu. Default use collective mode
INFO 2021-09-19 01:47:51,282 launch_utils.py:510] Local start 4 processes. First process distributed environment info (Only For Debug): 
    +=======================================================================================+
    |                        Distributed Envs                      Value                    |
    +---------------------------------------------------------------------------------------+
    |                       PADDLE_TRAINER_ID                        0                      |
    |                 PADDLE_CURRENT_ENDPOINT                 127.0.0.1:49142               |
    |                     PADDLE_TRAINERS_NUM                        4                      |
    |                PADDLE_TRAINER_ENDPOINTS  ... 0.1:50879,127.0.0.1:57142,127.0.0.1:37231|
    |                     PADDLE_RANK_IN_NODE                        0                      |
    |                 PADDLE_LOCAL_DEVICE_IDS                        0                      |
    |                 PADDLE_WORLD_DEVICE_IDS                     0,1,2,3                   |
    |                     FLAGS_selected_gpus                        0                      |
    |             FLAGS_selected_accelerators                        0                      |
    +=======================================================================================+

INFO 2021-09-19 01:47:51,282 launch_utils.py:514] details abouts PADDLE_TRAINER_ENDPOINTS can be found in log/endpoints.log, and detail running logs maybe found in log/workerlog.0
-----------  Configuration Arguments -----------
gpus: None
heter_worker_num: None
heter_workers: 
http_port: None
ips: 127.0.0.1
log_dir: log
nproc_per_node: None
run_mode: None
server_num: None
servers: 
training_script: train_ClassSR.py
training_script_args: ['--launcher', 'fleet', '-opt', 'config/train/train_ClassSR_RCAN_finetune.yml']
worker_num: None
workers: 
------------------------------------------------
launch train in GPU mode!
launch proc_id:9636 idx:0
launch proc_id:9639 idx:1
launch proc_id:9642 idx:2
launch proc_id:9645 idx:3
export CUDA_VISIBLE_DEVICES=0,1,2,3
W0919 01:47:53.147724  9636 gen_comm_id_helper.cc:120] connect addr=127.0.0.1:57142 failed 1 times with reason: Connection refused retry after 0.5 seconds
I0919 01:47:53.648573  9636 nccl_context.cc:74] init nccl context nranks: 4 local rank: 0 gpu id: 0 ring id: 0
W0919 01:47:55.037096  9636 device_context.cc:404] Please NOTE: device: 0, GPU Compute Capability: 7.0, Driver API Version: 10.2, Runtime API Version: 10.1
W0919 01:47:55.041541  9636 device_context.cc:422] device: 0, cuDNN Version: 7.6.
I0919 01:48:07.081929  9636 nccl_context.cc:107] init nccl context nranks: 4 local rank: 0 gpu id: 0 ring id: 10
2021-09-19 01:48:07,556-INFO: [topology.py:152:__init__] HybridParallelInfo: rank_id: 0, dp_degree: 4, mp_degree: 1, pp_degree: 1, dp_group: [0, 1, 2, 3], mp_group: [0], pp_group: [0], check/clip group: [0]
21-09-19 01:48:07.557 - INFO:   name: ClassSR_RCAN_finetune
  use_tb_logger: True
  model: ClassSR
  distortion: sr
  scale: 4
  gpu_ids: [0, 1, 2, 3]
  patch_size: 32
  step: 28
  fix_SR_module: False
  datasets:[
    train:[
      name: DIV2K
      mode: LQGT_rcan
      dataroot_GT: dataset/DIV2K_scale_sub/GT
      dataroot_LQ: dataset/DIV2K_scale_sub/LR
      use_shuffle: True
      n_workers: 6
      batch_size: 60
      GT_size: 128
      use_flip: True
      use_rot: True
      color: RGB
      phase: train
      scale: 4
      data_type: img
    ]
    val:[
      name: DIV2K10
      mode: LQGT_rcan
      dataroot_GT: dataset/val_10/HR
      dataroot_LQ: dataset/val_10/LR
      phase: val
      scale: 4
      data_type: img
    ]
  ]
  network_G:[
    which_model_G: classSR_3class_rcan
    in_nc: 3
    out_nc: 3
    scale: 4
  ]
  path:[
    pretrain_model_G: dataset/200000_G.pth
    pretrain_model_classifier: None
    pretrain_model_G_branch1: None
    pretrain_model_G_branch2: None
    pretrain_model_G_branch3: None
    resume_state: None
    strict_load: True
    root: /root/paddlejob/workspace/code/ClassSR_paddle-develop
    experiments_root: /root/paddlejob/workspace/code/ClassSR_paddle-develop/experiments/ClassSR_RCAN_finetune
    models: /root/paddlejob/workspace/code/ClassSR_paddle-develop/experiments/ClassSR_RCAN_finetune/models
    training_state: /root/paddlejob/workspace/code/ClassSR_paddle-develop/experiments/ClassSR_RCAN_finetune/training_state
    log: /root/paddlejob/workspace/code/ClassSR_paddle-develop/experiments/ClassSR_RCAN_finetune
    val_images: /root/paddlejob/workspace/code/ClassSR_paddle-develop/experiments/ClassSR_RCAN_finetune/val_images
  ]
  train:[
    lr_G: 3e-05
    lr_scheme: CosineAnnealingLR_Restart
    beta1: 0.9
    beta2: 0.99
    niter: 500000
    warmup_iter: -1
    T_period: [500000, 20000]
    restarts: [500000]
    restart_weights: [0.5]
    eta_min: 2e-05
    pixel_criterion: ClassSR_loss
    l1w: 4
    class_loss_w: 0.5
    average_loss_w: 3
    manual_seed: 10
    val_freq: 5000.0
  ]
  logger:[
    print_freq: 100
    save_checkpoint_freq: 2000.0
  ]
  is_train: True
  dist: True

21-09-19 01:48:07.569 - INFO: Random seed: 10
21-09-19 01:48:31.623 - INFO: Dataset [LQGTDataset_rcan - DIV2K] is created.
21-09-19 01:48:31.625 - INFO: Number of train images: 1,594,077, iters: 26,568
21-09-19 01:48:31.625 - INFO: Total epochs needed: 19 for iters 500,000
21-09-19 01:48:31.625 - INFO: Dataset [LQGTDataset_rcan - DIV2K10] is created.
21-09-19 01:48:31.626 - INFO: Number of val images in [DIV2K10]: 10
21-09-19 01:48:35.821 - INFO: Loading model for G [dataset/200000_G.pth] ...
21-09-19 01:48:47.347 - INFO: Network G structure: DataParallel, with parameters: 30,114,948
21-09-19 01:48:47.348 - INFO: DataParallel(
  (_layers): classSR_3class_rcan(
    (classifier): Classifier(
      (lastOut): Linear(in_features=32, out_features=3, dtype=float32)
      (CondNet): Sequential(
        (0): Conv2D(3, 128, kernel_size=[4, 4], stride=[4, 4], data_format=NCHW)
        (1): LeakyReLU(negative_slope=0.1, name=True)
        (2): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
        (3): LeakyReLU(negative_slope=0.1, name=True)
        (4): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
        (5): LeakyReLU(negative_slope=0.1, name=True)
        (6): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
        (7): LeakyReLU(negative_slope=0.1, name=True)
        (8): Conv2D(128, 32, kernel_size=[1, 1], data_format=NCHW)
      )
    )
    (net1): RCAN(
      (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
      (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
      (head): Sequential(
        (0): Conv2D(3, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
      (body): Sequential(
        (0): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (1): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (2): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (3): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (4): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (5): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (6): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (7): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (8): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (9): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (10): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
      (tail): Sequential(
        (0): Upsampler(
          (0): Conv2D(36, 144, kernel_size=[3, 3], padding=1, data_format=NCHW)
          (1): PixelShuffle(upscale_factor=2)
          (2): Conv2D(36, 144, kernel_size=[3, 3], padding=1, data_format=NCHW)
          (3): PixelShuffle(upscale_factor=2)
        )
        (1): Conv2D(36, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (net2): RCAN(
      (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
      (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
      (head): Sequential(
        (0): Conv2D(3, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
      (body): Sequential(
        (0): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (1): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (2): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (3): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (4): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (5): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (6): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (7): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (8): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (9): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (10): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
      (tail): Sequential(
        (0): Upsampler(
          (0): Conv2D(50, 200, kernel_size=[3, 3], padding=1, data_format=NCHW)
          (1): PixelShuffle(upscale_factor=2)
          (2): Conv2D(50, 200, kernel_size=[3, 3], padding=1, data_format=NCHW)
          (3): PixelShuffle(upscale_factor=2)
        )
        (1): Conv2D(50, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
    (net3): RCAN(
      (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
      (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
      (head): Sequential(
        (0): Conv2D(3, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
      (body): Sequential(
        (0): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (1): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (2): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (3): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (4): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (5): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (6): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (7): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (8): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (9): ResidualGroup(
          (body): Sequential(
            (0): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (1): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (2): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (3): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (4): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (5): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (6): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (7): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (8): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (9): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (10): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (11): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (12): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (13): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (14): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (15): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (16): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (17): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (18): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (19): RCAB(
              (body): Sequential(
                (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (1): ReLU(name=True)
                (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
                (3): CALayer(
                  (avg_pool): AdaptiveAvgPool2D(output_size=1)
                  (conv_du): Sequential(
                    (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                    (1): ReLU()
                    (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                    (3): Sigmoid()
                  )
                )
              )
            )
            (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
          )
        )
        (10): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
      (tail): Sequential(
        (0): Upsampler(
          (0): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
          (1): PixelShuffle(upscale_factor=2)
          (2): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
          (3): PixelShuffle(upscale_factor=2)
        )
        (1): Conv2D(64, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
      )
    )
  )
)
21-09-19 01:48:47.478 - INFO: Model [ClassSR_Model] is created.
21-09-19 01:48:47.478 - INFO: Start training from epoch: 0, iter: 0
21-09-19 01:55:09.945 - INFO: [epoch:  0, iter:     100, lr:(3.000e-05,)] l_pix: 1.1419e+01 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 4.7177e+01 
21-09-19 02:01:16.064 - INFO: [epoch:  0, iter:     200, lr:(3.000e-05,)] l_pix: 1.0099e+01 class_loss: 0.0000e+00 average_loss: 1.0000e+00 loss: 4.3395e+01 
21-09-19 02:07:13.623 - INFO: [epoch:  0, iter:     300, lr:(3.000e-05,)] l_pix: 1.2047e+01 class_loss: 0.0000e+00 average_loss: 7.0000e-01 loss: 5.0287e+01 
21-09-19 02:13:07.383 - INFO: [epoch:  0, iter:     400, lr:(3.000e-05,)] l_pix: 1.4516e+01 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 5.9566e+01 
21-09-19 02:19:18.753 - INFO: [epoch:  0, iter:     500, lr:(3.000e-05,)] l_pix: 4.2063e+00 class_loss: 0.0000e+00 average_loss: 8.0000e-01 loss: 1.9225e+01 
21-09-19 02:25:23.078 - INFO: [epoch:  0, iter:     600, lr:(3.000e-05,)] l_pix: 4.1772e+00 class_loss: 7.4704e-07 average_loss: 5.0000e-01 loss: 1.8209e+01 
21-09-19 02:31:30.419 - INFO: [epoch:  0, iter:     700, lr:(3.000e-05,)] l_pix: 9.5281e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 3.9613e+01 
21-09-19 02:37:41.479 - INFO: [epoch:  0, iter:     800, lr:(3.000e-05,)] l_pix: 3.4223e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 1.5189e+01 
21-09-19 02:43:37.649 - INFO: [epoch:  0, iter:     900, lr:(3.000e-05,)] l_pix: 1.1307e+01 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 4.6728e+01 
21-09-19 02:49:38.976 - INFO: [epoch:  0, iter:   1,000, lr:(3.000e-05,)] l_pix: 4.0281e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 1.7612e+01 
21-09-19 02:55:50.084 - INFO: [epoch:  0, iter:   1,100, lr:(3.000e-05,)] l_pix: 6.4919e+00 class_loss: 0.0000e+00 average_loss: 7.0000e-01 loss: 2.8067e+01 
21-09-19 03:02:05.118 - INFO: [epoch:  0, iter:   1,200, lr:(3.000e-05,)] l_pix: 3.0454e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 1.3682e+01 
21-09-19 03:08:04.324 - INFO: [epoch:  0, iter:   1,300, lr:(3.000e-05,)] l_pix: 6.2368e+00 class_loss: 1.5259e-06 average_loss: 6.0000e-01 loss: 2.6747e+01 
21-09-19 03:14:37.594 - INFO: [epoch:  0, iter:   1,400, lr:(3.000e-05,)] l_pix: 5.8515e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 2.4906e+01 
21-09-19 03:20:32.971 - INFO: [epoch:  0, iter:   1,500, lr:(3.000e-05,)] l_pix: 2.4642e+00 class_loss: 0.0000e+00 average_loss: 1.0000e+00 loss: 1.2857e+01 
21-09-19 03:26:27.068 - INFO: [epoch:  0, iter:   1,600, lr:(3.000e-05,)] l_pix: 3.9278e+00 class_loss: 0.0000e+00 average_loss: 4.0000e-01 loss: 1.6911e+01 
21-09-19 03:32:47.201 - INFO: [epoch:  0, iter:   1,700, lr:(3.000e-05,)] l_pix: 4.4376e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 1.9250e+01 
21-09-19 03:39:03.060 - INFO: [epoch:  0, iter:   1,800, lr:(3.000e-05,)] l_pix: 9.7821e-01 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 5.4128e+00 
21-09-19 03:45:03.367 - INFO: [epoch:  0, iter:   1,900, lr:(3.000e-05,)] l_pix: 1.2911e+01 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 5.3143e+01 
21-09-19 03:51:20.263 - INFO: [epoch:  0, iter:   2,000, lr:(3.000e-05,)] l_pix: 6.9359e+00 class_loss: 1.2716e-07 average_loss: 2.0000e-01 loss: 2.8344e+01 
21-09-19 03:51:20.268 - INFO: Saving models and training states.
21-09-19 03:57:34.959 - INFO: [epoch:  0, iter:   2,100, lr:(3.000e-05,)] l_pix: 8.1511e+00 class_loss: 0.0000e+00 average_loss: 6.0000e-01 loss: 3.4404e+01 
21-09-19 04:03:30.388 - INFO: [epoch:  0, iter:   2,200, lr:(3.000e-05,)] l_pix: 8.5431e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 3.5672e+01 
21-09-19 04:09:49.290 - INFO: [epoch:  0, iter:   2,300, lr:(3.000e-05,)] l_pix: 1.0530e+01 class_loss: 0.0000e+00 average_loss: 8.0000e-01 loss: 4.4519e+01 
21-09-19 04:16:00.195 - INFO: [epoch:  0, iter:   2,400, lr:(3.000e-05,)] l_pix: 1.9344e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 9.2374e+00 
21-09-19 04:21:59.889 - INFO: [epoch:  0, iter:   2,500, lr:(3.000e-05,)] l_pix: 1.1789e+00 class_loss: 0.0000e+00 average_loss: 8.0000e-01 loss: 7.1155e+00 
21-09-19 04:28:07.755 - INFO: [epoch:  0, iter:   2,600, lr:(3.000e-05,)] l_pix: 1.6082e+01 class_loss: 0.0000e+00 average_loss: 7.0000e-01 loss: 6.6427e+01 
21-09-19 04:34:24.393 - INFO: [epoch:  0, iter:   2,700, lr:(3.000e-05,)] l_pix: 1.7761e+00 class_loss: 4.5636e-02 average_loss: 5.0000e-01 loss: 8.6272e+00 
21-09-19 04:40:26.658 - INFO: [epoch:  0, iter:   2,800, lr:(3.000e-05,)] l_pix: 5.7724e+00 class_loss: 0.0000e+00 average_loss: 6.0000e-01 loss: 2.4890e+01 
21-09-19 04:46:44.307 - INFO: [epoch:  0, iter:   2,900, lr:(3.000e-05,)] l_pix: 2.6627e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 1.2151e+01 
21-09-19 04:53:02.677 - INFO: [epoch:  0, iter:   3,000, lr:(3.000e-05,)] l_pix: 5.2952e+00 class_loss: 0.0000e+00 average_loss: 7.0000e-01 loss: 2.3281e+01 
21-09-19 04:59:05.475 - INFO: [epoch:  0, iter:   3,100, lr:(3.000e-05,)] l_pix: 1.2218e+00 class_loss: 0.0000e+00 average_loss: 1.0000e+00 loss: 7.8874e+00 
21-09-19 05:05:24.876 - INFO: [epoch:  0, iter:   3,200, lr:(3.000e-05,)] l_pix: 9.5192e+00 class_loss: 0.0000e+00 average_loss: 1.0000e+00 loss: 4.1077e+01 
21-09-19 05:11:47.668 - INFO: [epoch:  0, iter:   3,300, lr:(3.000e-05,)] l_pix: 1.1576e+01 class_loss: 0.0000e+00 average_loss: 6.0000e-01 loss: 4.8102e+01 
21-09-19 05:17:50.891 - INFO: [epoch:  0, iter:   3,400, lr:(3.000e-05,)] l_pix: 2.0906e+00 class_loss: 1.5895e-08 average_loss: 3.0000e-01 loss: 9.2625e+00 
21-09-19 05:23:53.763 - INFO: [epoch:  0, iter:   3,500, lr:(3.000e-05,)] l_pix: 4.9267e+00 class_loss: 0.0000e+00 average_loss: 7.0000e-01 loss: 2.1807e+01 
21-09-19 05:30:09.474 - INFO: [epoch:  0, iter:   3,600, lr:(3.000e-05,)] l_pix: 6.6731e+00 class_loss: 0.0000e+00 average_loss: 1.0000e+00 loss: 2.9692e+01 
21-09-19 05:36:16.062 - INFO: [epoch:  0, iter:   3,700, lr:(3.000e-05,)] l_pix: 7.8554e+00 class_loss: 0.0000e+00 average_loss: 9.0000e-01 loss: 3.4122e+01 
21-09-19 05:42:18.785 - INFO: [epoch:  0, iter:   3,800, lr:(3.000e-05,)] l_pix: 2.1986e+01 class_loss: 0.0000e+00 average_loss: 4.0000e-01 loss: 8.9146e+01 
21-09-19 05:48:45.367 - INFO: [epoch:  0, iter:   3,900, lr:(3.000e-05,)] l_pix: 5.5839e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 2.3835e+01 
21-09-19 05:54:51.761 - INFO: [epoch:  0, iter:   4,000, lr:(3.000e-05,)] l_pix: 8.4403e+00 class_loss: 9.7911e-06 average_loss: 7.0000e-01 loss: 3.5861e+01 
21-09-19 05:54:51.766 - INFO: Saving models and training states.
21-09-19 06:01:03.947 - INFO: [epoch:  0, iter:   4,100, lr:(3.000e-05,)] l_pix: 7.6221e+00 class_loss: 0.0000e+00 average_loss: 4.0000e-01 loss: 3.1689e+01 
21-09-19 06:07:13.785 - INFO: [epoch:  0, iter:   4,200, lr:(3.000e-05,)] l_pix: 2.6954e+00 class_loss: 0.0000e+00 average_loss: 6.0000e-01 loss: 1.2581e+01 
21-09-19 06:13:19.091 - INFO: [epoch:  0, iter:   4,300, lr:(3.000e-05,)] l_pix: 3.2051e+00 class_loss: 0.0000e+00 average_loss: 3.0000e-01 loss: 1.3721e+01 
21-09-19 06:19:25.237 - INFO: [epoch:  0, iter:   4,400, lr:(3.000e-05,)] l_pix: 4.1451e+00 class_loss: 0.0000e+00 average_loss: 8.0000e-01 loss: 1.8980e+01 
21-09-19 06:25:35.951 - INFO: [epoch:  0, iter:   4,500, lr:(3.000e-05,)] l_pix: 7.6372e+00 class_loss: 0.0000e+00 average_loss: 9.0000e-01 loss: 3.3249e+01 
21-09-19 06:31:43.075 - INFO: [epoch:  0, iter:   4,600, lr:(3.000e-05,)] l_pix: 1.0197e+01 class_loss: 1.4305e-07 average_loss: 4.0000e-01 loss: 4.1987e+01 
21-09-19 06:37:42.989 - INFO: [epoch:  0, iter:   4,700, lr:(3.000e-05,)] l_pix: 1.1715e+01 class_loss: 5.1920e-05 average_loss: 4.9996e-01 loss: 4.8358e+01 
21-09-19 06:43:48.292 - INFO: [epoch:  0, iter:   4,800, lr:(3.000e-05,)] l_pix: 9.1059e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 3.7924e+01 
21-09-19 06:49:57.221 - INFO: [epoch:  0, iter:   4,900, lr:(3.000e-05,)] l_pix: 1.9315e+00 class_loss: 0.0000e+00 average_loss: 7.0000e-01 loss: 9.8259e+00 
21-09-19 06:55:58.587 - INFO: [epoch:  0, iter:   5,000, lr:(3.000e-05,)] l_pix: 1.8754e+01 class_loss: 0.0000e+00 average_loss: 1.0000e+00 loss: 7.8017e+01 
[                              ] 0/10, elapsed: 0s, ETA:
Start...
[2F[J[>>>---------------------------] 1/10, 0.0 task/s, elapsed: 77s, ETA:   696s
Test 0801x4
[2F[J[>>>>>>------------------------] 2/10, 0.0 task/s, elapsed: 151s, ETA:   605s
Test 0802x4
[2F[J[>>>>>>>>>---------------------] 3/10, 0.0 task/s, elapsed: 253s, ETA:   590s
Test 0803x4
[2F[J[>>>>>>>>>>>>------------------] 4/10, 0.0 task/s, elapsed: 330s, ETA:   496s
Test 0804x4
[2F[J[>>>>>>>>>>>>>>>---------------] 5/10, 0.0 task/s, elapsed: 428s, ETA:   428s
Test 0805x4
[2F[J[>>>>>>>>>>>>>>>>>>------------] 6/10, 0.0 task/s, elapsed: 519s, ETA:   346s
Test 0806x4
[2F[J[>>>>>>>>>>>>>>>>>>>>>---------] 7/10, 0.0 task/s, elapsed: 580s, ETA:   249s
Test 0807x4
[2F[J[>>>>>>>>>>>>>>>>>>>>>>>>------] 8/10, 0.0 task/s, elapsed: 658s, ETA:   164s
Test 0808x4
[2F[J[>>>>>>>>>>>>>>>>>>>>>>>>>>>---] 9/10, 0.0 task/s, elapsed: 734s, ETA:    82s
Test 0809x4
[2F[J[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] 10/10, 0.0 task/s, elapsed: 823s, ETA:     0s
Test 0810x4
21-09-19 07:09:42.346 - INFO: # Validation # PSNR: 2.9629e+01
21-09-19 07:09:42.347 - INFO: # Validation # FLOPs: 2.1026e+01
21-09-19 07:09:42.347 - INFO: # Validation # Percent: 6.4498e-01
21-09-19 07:09:42.347 - INFO: # Validation # TYPE num: 801 449 784 
21-09-19 07:09:42.347 - INFO: # Validation # PSNR Class: 35.485821208271304 32.34948142783884 30.275665640919105
21-09-19 07:15:42.357 - INFO: [epoch:  0, iter:   5,100, lr:(3.000e-05,)] l_pix: 3.3801e+00 class_loss: 1.9353e-02 average_loss: 5.8549e-01 loss: 1.5286e+01 
21-09-19 07:21:45.890 - INFO: [epoch:  0, iter:   5,200, lr:(3.000e-05,)] l_pix: 8.4086e+00 class_loss: 0.0000e+00 average_loss: 7.0000e-01 loss: 3.5734e+01 
21-09-19 07:27:52.987 - INFO: [epoch:  0, iter:   5,300, lr:(3.000e-05,)] l_pix: 4.0321e+00 class_loss: 0.0000e+00 average_loss: 5.0000e-01 loss: 1.7628e+01 
21-09-19 07:33:49.618 - INFO: [epoch:  0, iter:   5,400, lr:(3.000e-05,)] l_pix: 2.9541e+00 class_loss: 0.0000e+00 average_loss: 9.0000e-01 loss: 1.4516e+01 
21-09-19 07:39:57.876 - INFO: [epoch:  0, iter:   5,500, lr:(3.000e-05,)] l_pix: 1.4718e+01 class_loss: 0.0000e+00 average_loss: 6.0000e-01 loss: 6.0670e+01 
21-09-19 07:46:10.997 - INFO: [epoch:  0, iter:   5,600, lr:(3.000e-05,)] l_pix: 1.9161e+00 class_loss: 0.0000e+00 average_loss: 4.0000e-01 loss: 8.8642e+00 
21-09-19 07:52:04.482 - INFO: [epoch:  0, iter:   5,700, lr:(3.000e-05,)] l_pix: 1.0890e+01 class_loss: 0.0000e+00 average_loss: 1.0000e+00 loss: 4.6561e+01 
21-09-19 07:58:22.681 - INFO: [epoch:  0, iter:   5,800, lr:(3.000e-05,)] l_pix: 4.7199e+00 class_loss: 0.0000e+00 average_loss: 9.0000e-01 loss: 2.1580e+01 
