21-09-26 10:33:02.178 - INFO:   name: test_ClassSR_RCAN
  suffix: None
  model: ClassSR
  distortion: sr
  scale: 4
  patch_size: 32
  step: 28
  crop_border: None
  gpu_ids: [3]
  add_mask: False
  datasets:[
    test_1:[
      name: test2k
      mode: LQGT_rcan
      dataroot_GT: dataset/test2k/HR/X4
      dataroot_LQ: dataset/test2k/LR/X4
      phase: test
      scale: 4
      data_type: img
    ]
  ]
  network_G:[
    which_model_G: classSR_3class_rcan
    in_nc: 3
    out_nc: 3
    scale: 4
  ]
  path:[
    pretrain_model_G: dataset/150000_G.pth
    pretrain_model_classifier: None
    pretrain_model_G_branch1: None
    pretrain_model_G_branch2: None
    pretrain_model_G_branch3: None
    root: /Volumes/SSD/Code/ClassSR_paddle
    results_root: /Volumes/SSD/Code/ClassSR_paddle/results/test_ClassSR_RCAN
    log: /Volumes/SSD/Code/ClassSR_paddle/results/test_ClassSR_RCAN
  ]
  is_train: False

21-09-26 10:33:02.183 - INFO: Dataset [LQGTDataset_rcan - test2k] is created.
21-09-26 10:33:02.184 - INFO: Number of test images in [test2k]: 100
21-09-26 10:33:05.659 - INFO: Loading model for G [dataset/150000_G.pth] ...
21-09-26 10:33:10.558 - INFO: Network G structure: classSR_3class_rcan, with parameters: 30,114,948
21-09-26 10:33:10.558 - INFO: classSR_3class_rcan(
  (classifier): Classifier(
    (lastOut): Linear(in_features=32, out_features=3, dtype=float32)
    (CondNet): Sequential(
      (0): Conv2D(3, 128, kernel_size=[4, 4], stride=[4, 4], data_format=NCHW)
      (1): LeakyReLU(negative_slope=0.1, name=True)
      (2): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (3): LeakyReLU(negative_slope=0.1, name=True)
      (4): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (5): LeakyReLU(negative_slope=0.1, name=True)
      (6): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (7): LeakyReLU(negative_slope=0.1, name=True)
      (8): Conv2D(128, 32, kernel_size=[1, 1], data_format=NCHW)
    )
  )
  (net1): RCAN(
    (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(36, 144, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(36, 144, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(36, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (net2): RCAN(
    (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(50, 200, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(50, 200, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(50, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (net3): RCAN(
    (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(64, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
21-09-26 10:33:10.893 - INFO: Model [ClassSR_Model] is created.
21-09-26 10:33:10.893 - INFO: 
Testing [test2k]...
21-09-26 10:33:24.982 - INFO: 1201                 - PSNR: 32.201122 dB;  PSNR_Y: 33.631649 dB; .
21-09-26 10:33:24.982 - INFO: 1201 - type1: 23 type2: 0 type3: 5 FLOPs: 14.306785714285715 Percent: 0.43885845749342683.
21-09-26 10:34:42.046 - INFO: 1202                 - PSNR: 24.410294 dB;  PSNR_Y: 26.227605 dB; .
21-09-26 10:34:42.047 - INFO: 1202 - type1: 1 type2: 103 type3: 22 FLOPs: 22.041507936507934 Percent: 0.6761198753530041.
21-09-26 10:36:02.597 - INFO: 1203                 - PSNR: 26.290815 dB;  PSNR_Y: 27.697748 dB; .
21-09-26 10:36:02.598 - INFO: 1203 - type1: 39 type2: 58 type3: 43 FLOPs: 21.134785714285712 Percent: 0.648306310254163.
21-09-26 10:37:06.368 - INFO: 1204                 - PSNR: 27.039672 dB;  PSNR_Y: 28.523735 dB; .
21-09-26 10:37:06.369 - INFO: 1204 - type1: 86 type2: 4 type3: 36 FLOPs: 16.996666666666666 Percent: 0.5213701431492842.
21-09-26 10:38:21.626 - INFO: 1205                 - PSNR: 27.767962 dB;  PSNR_Y: 29.085970 dB; .
21-09-26 10:38:21.629 - INFO: 1205 - type1: 50 type2: 15 type3: 61 FLOPs: 22.250793650793653 Percent: 0.6825396825396826.
21-09-26 10:39:43.086 - INFO: 1206                 - PSNR: 24.819554 dB;  PSNR_Y: 26.268623 dB; .
21-09-26 10:39:43.087 - INFO: 1206 - type1: 28 type2: 21 type3: 77 FLOPs: 25.534444444444446 Percent: 0.7832651670074983.
21-09-26 10:40:51.666 - INFO: 1207                 - PSNR: 25.351476 dB;  PSNR_Y: 26.756900 dB; .
21-09-26 10:40:51.666 - INFO: 1207 - type1: 42 type2: 64 type3: 20 FLOPs: 18.725873015873017 Percent: 0.5744132826954913.
21-09-26 10:42:01.673 - INFO: 1208                 - PSNR: 25.346619 dB;  PSNR_Y: 26.793213 dB; .
21-09-26 10:42:01.674 - INFO: 1208 - type1: 65 type2: 1 type3: 46 FLOPs: 19.562053571428574 Percent: 0.6000629929886065.
21-09-26 10:43:17.814 - INFO: 1209                 - PSNR: 21.570749 dB;  PSNR_Y: 22.743362 dB; .
21-09-26 10:43:17.814 - INFO: 1209 - type1: 27 type2: 93 type3: 6 FLOPs: 18.454047619047614 Percent: 0.5660750803388839.
21-09-26 10:44:40.568 - INFO: 1210                 - PSNR: 21.925311 dB;  PSNR_Y: 23.192667 dB; .
21-09-26 10:44:40.569 - INFO: 1210 - type1: 15 type2: 86 type3: 25 FLOPs: 21.280555555555555 Percent: 0.6527777777777777.
21-09-26 10:46:17.653 - INFO: 1211                 - PSNR: 28.369743 dB;  PSNR_Y: 29.799434 dB; .
21-09-26 10:46:17.653 - INFO: 1211 - type1: 82 type2: 7 type3: 65 FLOPs: 20.164675324675326 Percent: 0.6185483228428014.
21-09-26 10:47:53.564 - INFO: 1212                 - PSNR: 24.060970 dB;  PSNR_Y: 25.375839 dB; .
21-09-26 10:47:53.564 - INFO: 1212 - type1: 26 type2: 0 type3: 100 FLOPs: 28.004603174603172 Percent: 0.8590369071964163.
21-09-26 10:48:44.956 - INFO: 1213                 - PSNR: 28.322244 dB;  PSNR_Y: 30.255922 dB; .
21-09-26 10:48:44.957 - INFO: 1213 - type1: 55 type2: 39 type3: 4 FLOPs: 15.047448979591838 Percent: 0.4615781895580318.
21-09-26 10:50:01.372 - INFO: 1214                 - PSNR: 24.628282 dB;  PSNR_Y: 26.106526 dB; .
21-09-26 10:50:01.373 - INFO: 1214 - type1: 66 type2: 36 type3: 24 FLOPs: 17.306190476190476 Percent: 0.5308647385334502.
21-09-26 10:51:32.434 - INFO: 1215                 - PSNR: 24.026010 dB;  PSNR_Y: 25.394701 dB; .
21-09-26 10:51:32.435 - INFO: 1215 - type1: 26 type2: 8 type3: 92 FLOPs: 27.198253968253972 Percent: 0.8343022689648457.
21-09-26 10:52:47.215 - INFO: 1216                 - PSNR: 24.792074 dB;  PSNR_Y: 26.684624 dB; .
21-09-26 10:52:47.216 - INFO: 1216 - type1: 0 type2: 122 type3: 4 FLOPs: 20.3031746031746 Percent: 0.622796766968546.
21-09-26 10:53:56.574 - INFO: 1217                 - PSNR: 28.150476 dB;  PSNR_Y: 29.820459 dB; .
21-09-26 10:53:56.575 - INFO: 1217 - type1: 83 type2: 1 type3: 42 FLOPs: 17.829285714285714 Percent: 0.5469106047326906.
21-09-26 10:55:30.033 - INFO: 1218                 - PSNR: 24.388418 dB;  PSNR_Y: 25.811271 dB; .
21-09-26 10:55:30.034 - INFO: 1218 - type1: 17 type2: 16 type3: 93 FLOPs: 27.98261904761905 Percent: 0.8583625474729769.
21-09-26 10:56:18.142 - INFO: 1219                 - PSNR: 26.085873 dB;  PSNR_Y: 27.547881 dB; .
21-09-26 10:56:18.143 - INFO: 1219 - type1: 49 type2: 4 type3: 31 FLOPs: 19.00440476190476 Percent: 0.582957201285422.
21-09-26 10:57:34.546 - INFO: 1220                 - PSNR: 23.279954 dB;  PSNR_Y: 24.720499 dB; .
21-09-26 10:57:34.547 - INFO: 1220 - type1: 39 type2: 64 type3: 23 FLOPs: 19.25611111111111 Percent: 0.5906782549420586.
21-09-26 10:58:31.894 - INFO: 1221                 - PSNR: 26.182178 dB;  PSNR_Y: 27.639346 dB; .
21-09-26 10:58:31.895 - INFO: 1221 - type1: 59 type2: 0 type3: 39 FLOPs: 19.192551020408164 Percent: 0.5887285589082258.
21-09-26 11:00:03.454 - INFO: 1222                 - PSNR: 24.967676 dB;  PSNR_Y: 26.553828 dB; .
21-09-26 11:00:03.454 - INFO: 1222 - type1: 99 type2: 19 type3: 50 FLOPs: 18.040297619047617 Percent: 0.5533833625474729.
21-09-26 11:01:26.573 - INFO: 1223                 - PSNR: 22.123805 dB;  PSNR_Y: 23.486256 dB; .
21-09-26 11:01:26.573 - INFO: 1223 - type1: 45 type2: 0 type3: 81 FLOPs: 24.64642857142857 Percent: 0.7560254163014898.
21-09-26 11:02:29.229 - INFO: 1224                 - PSNR: 36.232394 dB;  PSNR_Y: 37.811739 dB; .
21-09-26 11:02:29.229 - INFO: 1224 - type1: 113 type2: 1 type3: 12 FLOPs: 12.526904761904763 Percent: 0.38426088226701727.
21-09-26 11:03:45.651 - INFO: 1225                 - PSNR: 22.145679 dB;  PSNR_Y: 23.487795 dB; .
21-09-26 11:03:45.652 - INFO: 1225 - type1: 17 type2: 35 type3: 60 FLOPs: 25.250982142857143 Percent: 0.774570004382121.
21-09-26 11:04:51.126 - INFO: 1226                 - PSNR: 31.221407 dB;  PSNR_Y: 32.591232 dB; .
21-09-26 11:04:51.127 - INFO: 1226 - type1: 93 type2: 0 type3: 33 FLOPs: 16.16261904761905 Percent: 0.49578586035641253.
21-09-26 11:06:22.778 - INFO: 1227                 - PSNR: 27.632059 dB;  PSNR_Y: 28.922392 dB; .
21-09-26 11:06:22.778 - INFO: 1227 - type1: 25 type2: 9 type3: 92 FLOPs: 27.274206349206352 Percent: 0.8366320966014218.
21-09-26 11:08:20.191 - INFO: 1228                 - PSNR: 27.349866 dB;  PSNR_Y: 29.034784 dB; .
21-09-26 11:08:20.191 - INFO: 1228 - type1: 7 type2: 138 type3: 37 FLOPs: 22.11379120879121 Percent: 0.6783371536439021.
21-09-26 11:09:35.907 - INFO: 1229                 - PSNR: 27.495228 dB;  PSNR_Y: 28.910967 dB; .
21-09-26 11:09:35.907 - INFO: 1229 - type1: 71 type2: 4 type3: 51 FLOPs: 19.647857142857145 Percent: 0.602695004382121.
21-09-26 11:10:54.298 - INFO: 1230                 - PSNR: 26.356870 dB;  PSNR_Y: 27.608772 dB; .
21-09-26 11:10:54.299 - INFO: 1230 - type1: 70 type2: 20 type3: 36 FLOPs: 18.211904761904762 Percent: 0.5586473853345019.
21-09-26 11:12:30.405 - INFO: 1231                 - PSNR: 25.145866 dB;  PSNR_Y: 26.498688 dB; .
21-09-26 11:12:30.405 - INFO: 1231 - type1: 69 type2: 0 type3: 71 FLOPs: 21.624071428571426 Percent: 0.663315074496056.
21-09-26 11:13:45.276 - INFO: 1232                 - PSNR: 30.067525 dB;  PSNR_Y: 31.607736 dB; .
21-09-26 11:13:45.277 - INFO: 1232 - type1: 84 type2: 3 type3: 39 FLOPs: 17.450952380952383 Percent: 0.5353052877592755.
21-09-26 11:14:49.351 - INFO: 1233                 - PSNR: 21.981818 dB;  PSNR_Y: 23.303382 dB; .
21-09-26 11:14:49.352 - INFO: 1233 - type1: 16 type2: 64 type3: 18 FLOPs: 20.67020408163265 Percent: 0.634055339927382.
21-09-26 11:16:12.886 - INFO: 1234                 - PSNR: 23.032599 dB;  PSNR_Y: 24.224340 dB; .
21-09-26 11:16:12.887 - INFO: 1234 - type1: 1 type2: 116 type3: 9 FLOPs: 20.731190476190474 Percent: 0.6359260882267016.
21-09-26 11:17:20.149 - INFO: 1235                 - PSNR: 26.912492 dB;  PSNR_Y: 27.963093 dB; .
21-09-26 11:17:20.150 - INFO: 1235 - type1: 56 type2: 70 type3: 0 FLOPs: 15.646666666666667 Percent: 0.47995910020449895.
21-09-26 11:18:26.878 - INFO: 1236                 - PSNR: 38.026934 dB;  PSNR_Y: 39.270382 dB; .
21-09-26 11:18:26.879 - INFO: 1236 - type1: 46 type2: 79 type3: 1 FLOPs: 16.50698412698413 Percent: 0.5063492063492064.
21-09-26 11:19:42.026 - INFO: 1237                 - PSNR: 21.013120 dB;  PSNR_Y: 22.333116 dB; .
21-09-26 11:19:42.026 - INFO: 1237 - type1: 0 type2: 105 type3: 21 FLOPs: 22.016666666666666 Percent: 0.6753578732106339.
21-09-26 11:21:41.467 - INFO: 1238                 - PSNR: 28.444282 dB;  PSNR_Y: 29.693988 dB; .
21-09-26 11:21:41.467 - INFO: 1238 - type1: 80 type2: 9 type3: 107 FLOPs: 22.927040816326535 Percent: 0.7032834606235133.
21-09-26 11:22:57.313 - INFO: 1239                 - PSNR: 25.847905 dB;  PSNR_Y: 27.148047 dB; .
21-09-26 11:22:57.314 - INFO: 1239 - type1: 57 type2: 0 type3: 69 FLOPs: 22.52547619047619 Percent: 0.6909655273152205.
21-09-26 11:24:21.895 - INFO: 1240                 - PSNR: 26.736847 dB;  PSNR_Y: 28.247049 dB; .
21-09-26 11:24:21.896 - INFO: 1240 - type1: 29 type2: 10 type3: 87 FLOPs: 26.466428571428576 Percent: 0.8118536371603857.
21-09-26 11:25:33.467 - INFO: 1241                 - PSNR: 23.354504 dB;  PSNR_Y: 24.608245 dB; .
21-09-26 11:25:33.467 - INFO: 1241 - type1: 18 type2: 94 type3: 14 FLOPs: 19.943968253968254 Percent: 0.6117781672996396.
21-09-26 11:26:35.449 - INFO: 1242                 - PSNR: 28.122605 dB;  PSNR_Y: 29.290609 dB; .
21-09-26 11:26:35.450 - INFO: 1242 - type1: 103 type2: 4 type3: 19 FLOPs: 13.991984126984125 Percent: 0.4292019670854026.
21-09-26 11:27:56.273 - INFO: 1243                 - PSNR: 24.972511 dB;  PSNR_Y: 26.241965 dB; .
21-09-26 11:27:56.273 - INFO: 1243 - type1: 40 type2: 2 type3: 84 FLOPs: 25.32857142857143 Percent: 0.7769500438212095.
21-09-26 11:28:59.166 - INFO: 1244                 - PSNR: 27.973045 dB;  PSNR_Y: 29.461324 dB; .
21-09-26 11:28:59.167 - INFO: 1244 - type1: 88 type2: 10 type3: 28 FLOPs: 16.0384126984127 Percent: 0.4919758496445613.
21-09-26 11:29:56.513 - INFO: 1245                 - PSNR: 27.602520 dB;  PSNR_Y: 28.895027 dB; .
21-09-26 11:29:56.514 - INFO: 1245 - type1: 46 type2: 1 type3: 51 FLOPs: 22.01714285714286 Percent: 0.6753724802804558.
21-09-26 11:31:09.622 - INFO: 1246                 - PSNR: 25.837785 dB;  PSNR_Y: 27.045559 dB; .
21-09-26 11:31:09.622 - INFO: 1246 - type1: 82 type2: 29 type3: 29 FLOPs: 16.925428571428572 Percent: 0.5191849255039439.
21-09-26 11:32:28.049 - INFO: 1247                 - PSNR: 30.874328 dB;  PSNR_Y: 32.533451 dB; .
21-09-26 11:32:28.049 - INFO: 1247 - type1: 35 type2: 17 type3: 74 FLOPs: 24.700396825396826 Percent: 0.7576808842146265.
21-09-26 11:33:59.510 - INFO: 1248                 - PSNR: 22.668572 dB;  PSNR_Y: 23.945207 dB; .
21-09-26 11:33:59.511 - INFO: 1248 - type1: 7 type2: 0 type3: 119 FLOPs: 31.36277777777778 Percent: 0.9620483980913429.
21-09-26 11:35:04.460 - INFO: 1249                 - PSNR: 28.695350 dB;  PSNR_Y: 29.913197 dB; .
21-09-26 11:35:04.460 - INFO: 1249 - type1: 81 type2: 7 type3: 38 FLOPs: 17.57801587301587 Percent: 0.5392029408900574.
21-09-26 11:36:34.047 - INFO: 1250                 - PSNR: 23.381940 dB;  PSNR_Y: 24.990171 dB; .
21-09-26 11:36:34.047 - INFO: 1250 - type1: 10 type2: 0 type3: 116 FLOPs: 30.832539682539686 Percent: 0.9457834258447756.
21-09-26 11:36:51.089 - INFO: 1251                 - PSNR: 23.992353 dB;  PSNR_Y: 25.358032 dB; .
21-09-26 11:36:51.090 - INFO: 1251 - type1: 11 type2: 0 type3: 17 FLOPs: 23.85107142857143 Percent: 0.7316279579316389.
21-09-26 11:37:51.082 - INFO: 1252                 - PSNR: 23.326827 dB;  PSNR_Y: 24.183642 dB; .
21-09-26 11:37:51.083 - INFO: 1252 - type1: 14 type2: 43 type3: 41 FLOPs: 23.846122448979592 Percent: 0.7314761487417053.
21-09-26 11:39:34.522 - INFO: 1253                 - PSNR: 27.260991 dB;  PSNR_Y: 28.735614 dB; .
21-09-26 11:39:34.522 - INFO: 1253 - type1: 42 type2: 3 type3: 109 FLOPs: 26.27896103896104 Percent: 0.8061030993546331.
21-09-26 11:41:03.455 - INFO: 1254                 - PSNR: 26.120139 dB;  PSNR_Y: 27.560269 dB; .
21-09-26 11:41:03.455 - INFO: 1254 - type1: 5 type2: 27 type3: 94 FLOPs: 28.99484126984127 Percent: 0.8894123088908364.
21-09-26 11:42:19.934 - INFO: 1255                 - PSNR: 27.402510 dB;  PSNR_Y: 28.986529 dB; .
21-09-26 11:42:19.934 - INFO: 1255 - type1: 37 type2: 44 type3: 45 FLOPs: 21.62547619047619 Percent: 0.6633581653520303.
21-09-26 11:43:46.798 - INFO: 1256                 - PSNR: 26.383252 dB;  PSNR_Y: 27.883532 dB; .
21-09-26 11:43:46.799 - INFO: 1256 - type1: 74 type2: 12 type3: 68 FLOPs: 20.909220779220778 Percent: 0.641387140466895.
21-09-26 11:44:57.960 - INFO: 1257                 - PSNR: 25.087183 dB;  PSNR_Y: 26.432621 dB; .
21-09-26 11:44:57.960 - INFO: 1257 - type1: 39 type2: 6 type3: 67 FLOPs: 24.164910714285718 Percent: 0.7412549298860649.
21-09-26 11:46:16.908 - INFO: 1258                 - PSNR: 27.257817 dB;  PSNR_Y: 29.327946 dB; .
21-09-26 11:46:16.909 - INFO: 1258 - type1: 88 type2: 46 type3: 20 FLOPs: 16.08077922077922 Percent: 0.49327543622022146.
21-09-26 11:47:29.311 - INFO: 1259                 - PSNR: 27.985232 dB;  PSNR_Y: 29.516264 dB; .
21-09-26 11:47:29.311 - INFO: 1259 - type1: 12 type2: 100 type3: 14 FLOPs: 20.399682539682537 Percent: 0.6257571331190962.
21-09-26 11:48:43.817 - INFO: 1260                 - PSNR: 24.297306 dB;  PSNR_Y: 25.394411 dB; .
21-09-26 11:48:43.818 - INFO: 1260 - type1: 28 type2: 60 type3: 38 FLOPs: 21.603492063492062 Percent: 0.6626838056285909.
21-09-26 11:50:09.463 - INFO: 1261                 - PSNR: 24.327445 dB;  PSNR_Y: 25.786311 dB; .
21-09-26 11:50:09.464 - INFO: 1261 - type1: 18 type2: 6 type3: 102 FLOPs: 28.813809523809528 Percent: 0.883859187846918.
21-09-26 11:51:16.963 - INFO: 1262                 - PSNR: 24.948726 dB;  PSNR_Y: 26.265708 dB; .
21-09-26 11:51:16.963 - INFO: 1262 - type1: 60 type2: 9 type3: 57 FLOPs: 21.08809523809524 Percent: 0.6468740870581361.
21-09-26 11:52:22.573 - INFO: 1263                 - PSNR: 23.198671 dB;  PSNR_Y: 24.521353 dB; .
21-09-26 11:52:22.573 - INFO: 1263 - type1: 44 type2: 50 type3: 32 FLOPs: 19.783492063492066 Percent: 0.6068555847696953.
21-09-26 11:53:38.920 - INFO: 1264                 - PSNR: 23.805382 dB;  PSNR_Y: 24.976303 dB; .
21-09-26 11:53:38.920 - INFO: 1264 - type1: 39 type2: 0 type3: 87 FLOPs: 25.706904761904763 Percent: 0.7885553607946246.
21-09-26 11:55:00.036 - INFO: 1265                 - PSNR: 24.116418 dB;  PSNR_Y: 25.584079 dB; .
21-09-26 11:55:00.037 - INFO: 1265 - type1: 27 type2: 1 type3: 98 FLOPs: 27.727063492063493 Percent: 0.8505234200019476.
21-09-26 11:56:12.344 - INFO: 1266                 - PSNR: 21.407461 dB;  PSNR_Y: 22.752325 dB; .
21-09-26 11:56:12.344 - INFO: 1266 - type1: 56 type2: 6 type3: 64 FLOPs: 22.097460317460317 Percent: 0.677836206057065.
21-09-26 11:57:14.661 - INFO: 1267                 - PSNR: 25.254951 dB;  PSNR_Y: 26.599151 dB; .
21-09-26 11:57:14.661 - INFO: 1267 - type1: 22 type2: 70 type3: 20 FLOPs: 20.288035714285716 Percent: 0.622332383873795.
21-09-26 11:58:31.087 - INFO: 1268                 - PSNR: 25.346238 dB;  PSNR_Y: 26.677097 dB; .
21-09-26 11:58:31.087 - INFO: 1268 - type1: 72 type2: 8 type3: 60 FLOPs: 20.421142857142858 Percent: 0.6264154250657318.
21-09-26 11:59:42.428 - INFO: 1269                 - PSNR: 32.678017 dB;  PSNR_Y: 34.027017 dB; .
21-09-26 11:59:42.429 - INFO: 1269 - type1: 17 type2: 74 type3: 35 FLOPs: 22.1365873015873 Percent: 0.679036420294089.
21-09-26 12:00:42.519 - INFO: 1270                 - PSNR: 34.675662 dB;  PSNR_Y: 36.058409 dB; .
21-09-26 12:00:42.519 - INFO: 1270 - type1: 65 type2: 56 type3: 5 FLOPs: 15.467063492063492 Percent: 0.47444980037004575.
21-09-26 12:02:20.504 - INFO: 1271                 - PSNR: 24.464004 dB;  PSNR_Y: 25.959200 dB; .
21-09-26 12:02:20.505 - INFO: 1271 - type1: 6 type2: 91 type3: 57 FLOPs: 24.227792207792206 Percent: 0.7431838100549756.
21-09-26 12:03:43.565 - INFO: 1272                 - PSNR: 22.874508 dB;  PSNR_Y: 24.529722 dB; .
21-09-26 12:03:43.566 - INFO: 1272 - type1: 7 type2: 15 type3: 104 FLOPs: 29.850873015873017 Percent: 0.9156709514071477.
21-09-26 12:04:49.468 - INFO: 1273                 - PSNR: 30.080453 dB;  PSNR_Y: 31.450833 dB; .
21-09-26 12:04:49.469 - INFO: 1273 - type1: 13 type2: 107 type3: 6 FLOPs: 19.51738095238095 Percent: 0.5986926672509494.
21-09-26 12:06:08.546 - INFO: 1274                 - PSNR: 28.947010 dB;  PSNR_Y: 30.305581 dB; .
21-09-26 12:06:08.547 - INFO: 1274 - type1: 31 type2: 111 type3: 12 FLOPs: 18.963181818181816 Percent: 0.5816926938092581.
21-09-26 12:06:59.637 - INFO: 1275                 - PSNR: 30.433463 dB;  PSNR_Y: 31.631613 dB; .
21-09-26 12:06:59.638 - INFO: 1275 - type1: 89 type2: 0 type3: 23 FLOPs: 14.903303571428571 Percent: 0.45715655127081506.
21-09-26 12:08:42.975 - INFO: 1276                 - PSNR: 20.944587 dB;  PSNR_Y: 22.310406 dB; .
21-09-26 12:08:42.976 - INFO: 1276 - type1: 3 type2: 14 type3: 137 FLOPs: 31.011623376623376 Percent: 0.9512767906939685.
21-09-26 12:09:55.261 - INFO: 1277                 - PSNR: 25.117311 dB;  PSNR_Y: 26.802773 dB; .
21-09-26 12:09:55.262 - INFO: 1277 - type1: 26 type2: 43 type3: 57 FLOPs: 23.67047619047619 Percent: 0.7260882267017236.
21-09-26 12:10:34.531 - INFO: 1278                 - PSNR: 23.144983 dB;  PSNR_Y: 24.486752 dB; .
21-09-26 12:10:34.532 - INFO: 1278 - type1: 31 type2: 0 type3: 39 FLOPs: 22.73757142857143 Percent: 0.6974715162138476.
21-09-26 12:11:28.342 - INFO: 1279                 - PSNR: 27.040153 dB;  PSNR_Y: 28.413298 dB; .
21-09-26 12:11:28.343 - INFO: 1279 - type1: 34 type2: 25 type3: 39 FLOPs: 21.633877551020408 Percent: 0.663615875798172.
21-09-26 12:12:45.834 - INFO: 1280                 - PSNR: 23.178724 dB;  PSNR_Y: 24.427646 dB; .
21-09-26 12:12:45.834 - INFO: 1280 - type1: 6 type2: 0 type3: 106 FLOPs: 31.406964285714288 Percent: 0.9634038124452236.
21-09-26 12:14:08.328 - INFO: 1281                 - PSNR: 23.290027 dB;  PSNR_Y: 24.637405 dB; .
21-09-26 12:14:08.329 - INFO: 1281 - type1: 0 type2: 45 type3: 81 FLOPs: 28.064285714285713 Percent: 0.8608676599474144.
21-09-26 12:15:13.115 - INFO: 1282                 - PSNR: 23.797831 dB;  PSNR_Y: 25.038773 dB; .
21-09-26 12:15:13.116 - INFO: 1282 - type1: 13 type2: 5 type3: 80 FLOPs: 28.997857142857143 Percent: 0.8895048203330411.
21-09-26 12:16:21.404 - INFO: 1283                 - PSNR: 31.802793 dB;  PSNR_Y: 33.265211 dB; .
21-09-26 12:16:21.405 - INFO: 1283 - type1: 42 type2: 48 type3: 36 FLOPs: 20.338571428571427 Percent: 0.6238825591586327.
21-09-26 12:17:23.769 - INFO: 1284                 - PSNR: 26.692312 dB;  PSNR_Y: 28.009872 dB; .
21-09-26 12:17:23.769 - INFO: 1284 - type1: 86 type2: 1 type3: 39 FLOPs: 17.29904761904762 Percent: 0.5306456324861233.
21-09-26 12:18:30.054 - INFO: 1285                 - PSNR: 26.436548 dB;  PSNR_Y: 28.078873 dB; .
21-09-26 12:18:30.055 - INFO: 1285 - type1: 60 type2: 28 type3: 38 FLOPs: 19.173015873015874 Percent: 0.5881293212581556.
21-09-26 12:19:32.345 - INFO: 1286                 - PSNR: 28.042098 dB;  PSNR_Y: 29.392797 dB; .
21-09-26 12:19:32.345 - INFO: 1286 - type1: 59 type2: 50 type3: 17 FLOPs: 17.132301587301587 Percent: 0.5255307235368585.
21-09-26 12:20:31.909 - INFO: 1287                 - PSNR: 25.778795 dB;  PSNR_Y: 27.145843 dB; .
21-09-26 12:20:31.910 - INFO: 1287 - type1: 63 type2: 0 type3: 49 FLOPs: 20.073125 Percent: 0.6157400306748466.
21-09-26 12:21:44.924 - INFO: 1288                 - PSNR: 22.025532 dB;  PSNR_Y: 23.402485 dB; .
21-09-26 12:21:44.925 - INFO: 1288 - type1: 47 type2: 8 type3: 71 FLOPs: 23.486587301587303 Percent: 0.7204474632388743.
21-09-26 12:23:41.853 - INFO: 1289                 - PSNR: 24.218728 dB;  PSNR_Y: 25.508042 dB; .
21-09-26 12:23:41.854 - INFO: 1289 - type1: 74 type2: 26 type3: 82 FLOPs: 21.730879120879123 Percent: 0.6665913840760467.
21-09-26 12:24:52.873 - INFO: 1290                 - PSNR: 30.026734 dB;  PSNR_Y: 31.292748 dB; .
21-09-26 12:24:52.873 - INFO: 1290 - type1: 96 type2: 2 type3: 28 FLOPs: 15.430793650793653 Percent: 0.47333722855195254.
21-09-26 12:26:09.801 - INFO: 1291                 - PSNR: 30.397391 dB;  PSNR_Y: 32.328644 dB; .
21-09-26 12:26:09.802 - INFO: 1291 - type1: 4 type2: 118 type3: 4 FLOPs: 19.99936507936508 Percent: 0.6134774564222417.
21-09-26 12:27:06.385 - INFO: 1292                 - PSNR: 28.143517 dB;  PSNR_Y: 29.655616 dB; .
21-09-26 12:27:06.385 - INFO: 1292 - type1: 62 type2: 0 type3: 36 FLOPs: 18.510816326530612 Percent: 0.5678164517340678.
21-09-26 12:27:57.041 - INFO: 1293                 - PSNR: 26.495053 dB;  PSNR_Y: 27.835583 dB; .
21-09-26 12:27:57.042 - INFO: 1293 - type1: 46 type2: 0 type3: 38 FLOPs: 20.40452380952381 Percent: 0.6259056383289512.
21-09-26 12:29:19.750 - INFO: 1294                 - PSNR: 26.452607 dB;  PSNR_Y: 27.848456 dB; .
21-09-26 12:29:19.750 - INFO: 1294 - type1: 22 type2: 52 type3: 52 FLOPs: 23.470317460317464 Percent: 0.7199483883532964.
21-09-26 12:30:08.349 - INFO: 1295                 - PSNR: 29.883887 dB;  PSNR_Y: 31.157359 dB; .
21-09-26 12:30:08.349 - INFO: 1295 - type1: 81 type2: 0 type3: 17 FLOPs: 14.193163265306124 Percent: 0.43537310629773385.
21-09-26 12:31:15.488 - INFO: 1296                 - PSNR: 25.321680 dB;  PSNR_Y: 26.430434 dB; .
21-09-26 12:31:15.488 - INFO: 1296 - type1: 38 type2: 43 type3: 31 FLOPs: 20.16821428571429 Percent: 0.6186568799298862.
21-09-26 12:32:20.299 - INFO: 1297                 - PSNR: 31.735545 dB;  PSNR_Y: 33.062358 dB; .
21-09-26 12:32:20.300 - INFO: 1297 - type1: 97 type2: 0 type3: 29 FLOPs: 15.455634920634921 Percent: 0.4740992306943227.
21-09-26 12:33:10.567 - INFO: 1298                 - PSNR: 30.099816 dB;  PSNR_Y: 31.635349 dB; .
21-09-26 12:33:10.567 - INFO: 1298 - type1: 76 type2: 0 type3: 22 FLOPs: 15.329387755102044 Percent: 0.4702266182546639.
21-09-26 12:34:06.487 - INFO: 1299                 - PSNR: 25.652300 dB;  PSNR_Y: 26.548995 dB; .
21-09-26 12:34:06.488 - INFO: 1299 - type1: 31 type2: 56 type3: 11 FLOPs: 18.29826530612245 Percent: 0.5612964817828971.
21-09-26 12:35:23.651 - INFO: 1300                 - PSNR: 28.085923 dB;  PSNR_Y: 29.404724 dB; .
21-09-26 12:35:23.651 - INFO: 1300 - type1: 44 type2: 36 type3: 46 FLOPs: 21.194603174603177 Percent: 0.650141201674944.
21-09-26 12:35:23.653 - INFO: # Validation # Class num: 4423 3133 4764 all:12320
21-09-26 12:35:23.653 - INFO: # FLOPs 2.1375e+01 Percent 6.5568e-01
21-09-26 12:35:23.653 - INFO: ----Average PSNR results for test2k----
	PSNR: 26.347042 dB; 

