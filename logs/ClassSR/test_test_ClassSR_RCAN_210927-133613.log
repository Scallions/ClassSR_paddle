21-09-27 13:36:13.492 - INFO:   name: test_ClassSR_RCAN
  suffix: None
  model: ClassSR
  distortion: sr
  scale: 4
  patch_size: 32
  step: 28
  crop_border: None
  gpu_ids: [3]
  add_mask: False
  datasets:[
    test_1:[
      name: test2k
      mode: LQGT_rcan
      dataroot_GT: dataset/test2k/HR/X4
      dataroot_LQ: dataset/test2k/LR/X4
      phase: test
      scale: 4
      data_type: img
    ]
  ]
  network_G:[
    which_model_G: classSR_3class_rcan
    in_nc: 3
    out_nc: 3
    scale: 4
  ]
  path:[
    pretrain_model_G: dataset/200000_G.pth
    pretrain_model_classifier: None
    pretrain_model_G_branch1: None
    pretrain_model_G_branch2: None
    pretrain_model_G_branch3: None
    root: /Volumes/SSD/Code/ClassSR_paddle
    results_root: /Volumes/SSD/Code/ClassSR_paddle/results/test_ClassSR_RCAN
    log: /Volumes/SSD/Code/ClassSR_paddle/results/test_ClassSR_RCAN
  ]
  is_train: False

21-09-27 13:36:13.500 - INFO: Dataset [LQGTDataset_rcan - test2k] is created.
21-09-27 13:36:13.502 - INFO: Number of test images in [test2k]: 100
21-09-27 13:36:16.480 - INFO: Loading model for G [dataset/200000_G.pth] ...
21-09-27 13:36:21.086 - INFO: Network G structure: classSR_3class_rcan, with parameters: 30,114,948
21-09-27 13:36:21.086 - INFO: classSR_3class_rcan(
  (classifier): Classifier(
    (lastOut): Linear(in_features=32, out_features=3, dtype=float32)
    (CondNet): Sequential(
      (0): Conv2D(3, 128, kernel_size=[4, 4], stride=[4, 4], data_format=NCHW)
      (1): LeakyReLU(negative_slope=0.1, name=True)
      (2): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (3): LeakyReLU(negative_slope=0.1, name=True)
      (4): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (5): LeakyReLU(negative_slope=0.1, name=True)
      (6): Conv2D(128, 128, kernel_size=[1, 1], data_format=NCHW)
      (7): LeakyReLU(negative_slope=0.1, name=True)
      (8): Conv2D(128, 32, kernel_size=[1, 1], data_format=NCHW)
    )
  )
  (net1): RCAN(
    (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(36, 2, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(2, 36, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(36, 36, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(36, 144, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(36, 144, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(36, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (net2): RCAN(
    (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(50, 3, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(3, 50, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(50, 50, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(50, 200, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(50, 200, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(50, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
  (net3): RCAN(
    (sub_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (add_mean): MeanShift(3, 3, kernel_size=[1, 1], data_format=NCHW)
    (head): Sequential(
      (0): Conv2D(3, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (body): Sequential(
      (0): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (1): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (2): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (3): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (4): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (5): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (6): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (7): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (8): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (9): ResidualGroup(
        (body): Sequential(
          (0): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (1): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (2): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (3): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (4): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (5): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (6): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (7): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (8): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (9): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (10): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (11): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (12): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (13): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (14): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (15): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (16): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (17): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (18): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (19): RCAB(
            (body): Sequential(
              (0): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (1): ReLU(name=True)
              (2): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
              (3): CALayer(
                (avg_pool): AdaptiveAvgPool2D(output_size=1)
                (conv_du): Sequential(
                  (0): Conv2D(64, 4, kernel_size=[1, 1], data_format=NCHW)
                  (1): ReLU()
                  (2): Conv2D(4, 64, kernel_size=[1, 1], data_format=NCHW)
                  (3): Sigmoid()
                )
              )
            )
          )
          (20): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
        )
      )
      (10): Conv2D(64, 64, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2D(64, 256, kernel_size=[3, 3], padding=1, data_format=NCHW)
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2D(64, 3, kernel_size=[3, 3], padding=1, data_format=NCHW)
    )
  )
)
21-09-27 13:36:21.531 - INFO: Model [ClassSR_Model] is created.
21-09-27 13:36:21.532 - INFO: 
Testing [test2k]...
21-09-27 13:36:35.554 - INFO: 1201                 - PSNR: 32.201122 dB;  PSNR_Y: 33.631649 dB; .
21-09-27 13:36:35.555 - INFO: 1201 - type1: 23 type2: 0 type3: 5 FLOPs: 14.306785714285715 Percent: 0.43885845749342683.
21-09-27 13:37:56.992 - INFO: 1202                 - PSNR: 24.416355 dB;  PSNR_Y: 26.233618 dB; .
21-09-27 13:37:56.993 - INFO: 1202 - type1: 1 type2: 91 type3: 34 FLOPs: 23.251031746031746 Percent: 0.7132218327003603.
21-09-27 13:39:30.017 - INFO: 1203                 - PSNR: 26.292905 dB;  PSNR_Y: 27.699190 dB; .
21-09-27 13:39:30.017 - INFO: 1203 - type1: 39 type2: 54 type3: 47 FLOPs: 21.497642857142857 Percent: 0.6594368974583699.
21-09-27 13:40:49.557 - INFO: 1204                 - PSNR: 27.043438 dB;  PSNR_Y: 28.527895 dB; .
21-09-27 13:40:49.557 - INFO: 1204 - type1: 83 type2: 7 type3: 36 FLOPs: 17.22452380952381 Percent: 0.5283596260590125.
21-09-27 13:42:18.045 - INFO: 1205                 - PSNR: 27.772058 dB;  PSNR_Y: 29.089722 dB; .
21-09-27 13:42:18.045 - INFO: 1205 - type1: 43 type2: 31 type3: 52 FLOPs: 21.87531746031746 Percent: 0.6710220079851982.
21-09-27 13:43:52.161 - INFO: 1206                 - PSNR: 24.821234 dB;  PSNR_Y: 26.270342 dB; .
21-09-27 13:43:52.161 - INFO: 1206 - type1: 27 type2: 24 type3: 75 FLOPs: 25.408809523809527 Percent: 0.7794113350861818.
21-09-27 13:45:12.700 - INFO: 1207                 - PSNR: 25.351829 dB;  PSNR_Y: 26.757062 dB; .
21-09-27 13:45:12.700 - INFO: 1207 - type1: 42 type2: 58 type3: 26 FLOPs: 19.33063492063492 Percent: 0.5929642613691694.
21-09-27 13:46:25.295 - INFO: 1208                 - PSNR: 25.349856 dB;  PSNR_Y: 26.796135 dB; .
21-09-27 13:46:25.295 - INFO: 1208 - type1: 59 type2: 10 type3: 43 FLOPs: 19.73455357142857 Percent: 0.6053544040315512.
21-09-27 13:47:45.838 - INFO: 1209                 - PSNR: 21.570326 dB;  PSNR_Y: 22.742991 dB; .
21-09-27 13:47:45.838 - INFO: 1209 - type1: 26 type2: 92 type3: 8 FLOPs: 18.731587301587304 Percent: 0.5745885675333529.
21-09-27 13:49:11.388 - INFO: 1210                 - PSNR: 21.925832 dB;  PSNR_Y: 23.193130 dB; .
21-09-27 13:49:11.388 - INFO: 1210 - type1: 15 type2: 83 type3: 28 FLOPs: 21.582936507936505 Percent: 0.6620532671146167.
21-09-27 13:50:52.389 - INFO: 1211                 - PSNR: 28.414208 dB;  PSNR_Y: 29.844680 dB; .
21-09-27 13:50:52.391 - INFO: 1211 - type1: 80 type2: 7 type3: 67 FLOPs: 20.453896103896106 Percent: 0.6274201258863836.
21-09-27 13:52:33.137 - INFO: 1212                 - PSNR: 24.064821 dB;  PSNR_Y: 25.379511 dB; .
21-09-27 13:52:33.138 - INFO: 1212 - type1: 23 type2: 0 type3: 103 FLOPs: 28.534841269841273 Percent: 0.8753018794429838.
21-09-27 13:53:29.947 - INFO: 1213                 - PSNR: 28.323489 dB;  PSNR_Y: 30.257285 dB; .
21-09-27 13:53:29.947 - INFO: 1213 - type1: 54 type2: 40 type3: 4 FLOPs: 15.14510204081633 Percent: 0.4645736822336297.
21-09-27 13:54:48.652 - INFO: 1214                 - PSNR: 24.627996 dB;  PSNR_Y: 26.105864 dB; .
21-09-27 13:54:48.652 - INFO: 1214 - type1: 66 type2: 31 type3: 29 FLOPs: 17.81015873015873 Percent: 0.5463238874281818.
21-09-27 13:56:27.213 - INFO: 1215                 - PSNR: 24.033198 dB;  PSNR_Y: 25.403083 dB; .
21-09-27 13:56:27.213 - INFO: 1215 - type1: 24 type2: 6 type3: 96 FLOPs: 27.753333333333337 Percent: 0.8513292433537833.
21-09-27 13:57:50.239 - INFO: 1216                 - PSNR: 24.793033 dB;  PSNR_Y: 26.685486 dB; .
21-09-27 13:57:50.239 - INFO: 1216 - type1: 0 type2: 119 type3: 7 FLOPs: 20.605555555555554 Percent: 0.6320722563053851.
21-09-27 13:59:12.760 - INFO: 1217                 - PSNR: 28.152980 dB;  PSNR_Y: 29.823251 dB; .
21-09-27 13:59:12.760 - INFO: 1217 - type1: 81 type2: 0 type3: 45 FLOPs: 18.283571428571427 Percent: 0.5608457493426818.
21-09-27 14:00:57.810 - INFO: 1218                 - PSNR: 24.393941 dB;  PSNR_Y: 25.817489 dB; .
21-09-27 14:00:57.810 - INFO: 1218 - type1: 15 type2: 12 type3: 99 FLOPs: 28.739285714285714 Percent: 0.8815731814198071.
21-09-27 14:01:56.450 - INFO: 1219                 - PSNR: 26.100372 dB;  PSNR_Y: 27.561913 dB; .
21-09-27 14:01:56.450 - INFO: 1219 - type1: 43 type2: 6 type3: 35 FLOPs: 20.292738095238096 Percent: 0.6224766286882851.
21-09-27 14:03:21.968 - INFO: 1220                 - PSNR: 23.279885 dB;  PSNR_Y: 24.720677 dB; .
21-09-27 14:03:21.968 - INFO: 1220 - type1: 39 type2: 59 type3: 28 FLOPs: 19.760079365079363 Percent: 0.6061374038367903.
21-09-27 14:04:18.148 - INFO: 1221                 - PSNR: 26.185022 dB;  PSNR_Y: 27.642156 dB; .
21-09-27 14:04:18.149 - INFO: 1221 - type1: 58 type2: 0 type3: 40 FLOPs: 19.419795918367345 Percent: 0.5956992612996118.
21-09-27 14:05:50.644 - INFO: 1222                 - PSNR: 24.965395 dB;  PSNR_Y: 26.550388 dB; .
21-09-27 14:05:50.644 - INFO: 1222 - type1: 99 type2: 5 type3: 64 FLOPs: 19.098630952380955 Percent: 0.5858475752264096.
21-09-27 14:07:14.262 - INFO: 1223                 - PSNR: 22.123961 dB;  PSNR_Y: 23.486243 dB; .
21-09-27 14:07:14.262 - INFO: 1223 - type1: 33 type2: 0 type3: 93 FLOPs: 26.767380952380954 Percent: 0.8210853052877592.
21-09-27 14:08:11.048 - INFO: 1224                 - PSNR: 36.240906 dB;  PSNR_Y: 37.819270 dB; .
21-09-27 14:08:11.048 - INFO: 1224 - type1: 113 type2: 2 type3: 11 FLOPs: 12.426111111111112 Percent: 0.3811690524880709.
21-09-27 14:09:26.350 - INFO: 1225                 - PSNR: 22.153728 dB;  PSNR_Y: 23.494176 dB; .
21-09-27 14:09:26.350 - INFO: 1225 - type1: 15 type2: 24 type3: 73 FLOPs: 26.895982142857147 Percent: 0.8250301270815076.
21-09-27 14:10:30.797 - INFO: 1226                 - PSNR: 31.221651 dB;  PSNR_Y: 32.591366 dB; .
21-09-27 14:10:30.797 - INFO: 1226 - type1: 92 type2: 0 type3: 34 FLOPs: 16.33936507936508 Percent: 0.501207517771935.
21-09-27 14:11:59.946 - INFO: 1227                 - PSNR: 27.665362 dB;  PSNR_Y: 28.954118 dB; .
21-09-27 14:11:59.946 - INFO: 1227 - type1: 14 type2: 9 type3: 103 FLOPs: 29.218412698412703 Percent: 0.8962703281721688.
21-09-27 14:13:49.929 - INFO: 1228                 - PSNR: 27.344863 dB;  PSNR_Y: 29.028858 dB; .
21-09-27 14:13:49.929 - INFO: 1228 - type1: 9 type2: 137 type3: 36 FLOPs: 21.938846153846153 Percent: 0.6729707409155261.
21-09-27 14:15:02.993 - INFO: 1229                 - PSNR: 27.544797 dB;  PSNR_Y: 28.958665 dB; .
21-09-27 14:15:02.993 - INFO: 1229 - type1: 64 type2: 8 type3: 54 FLOPs: 20.481904761904765 Percent: 0.6282792871749928.
21-09-27 14:16:11.940 - INFO: 1230                 - PSNR: 26.357770 dB;  PSNR_Y: 27.609890 dB; .
21-09-27 14:16:11.940 - INFO: 1230 - type1: 68 type2: 21 type3: 37 FLOPs: 18.464603174603173 Percent: 0.5663988703866004.
21-09-27 14:17:36.040 - INFO: 1231                 - PSNR: 25.135644 dB;  PSNR_Y: 26.488385 dB; .
21-09-27 14:17:36.040 - INFO: 1231 - type1: 67 type2: 0 type3: 73 FLOPs: 21.94221428571429 Percent: 0.6730740578439965.
21-09-27 14:18:44.331 - INFO: 1232                 - PSNR: 30.069152 dB;  PSNR_Y: 31.603435 dB; .
21-09-27 14:18:44.331 - INFO: 1232 - type1: 81 type2: 3 type3: 42 FLOPs: 17.981190476190477 Percent: 0.5515702600058429.
21-09-27 14:19:43.320 - INFO: 1233                 - PSNR: 21.983729 dB;  PSNR_Y: 23.305096 dB; .
21-09-27 14:19:43.320 - INFO: 1233 - type1: 17 type2: 57 type3: 24 FLOPs: 21.350102040816324 Percent: 0.654911105546513.
21-09-27 14:20:58.645 - INFO: 1234                 - PSNR: 23.036465 dB;  PSNR_Y: 24.227814 dB; .
21-09-27 14:20:58.645 - INFO: 1234 - type1: 1 type2: 112 type3: 13 FLOPs: 21.13436507936508 Percent: 0.6482934073424871.
21-09-27 14:22:03.494 - INFO: 1235                 - PSNR: 26.912492 dB;  PSNR_Y: 27.963093 dB; .
21-09-27 14:22:03.494 - INFO: 1235 - type1: 56 type2: 70 type3: 0 FLOPs: 15.646666666666667 Percent: 0.47995910020449895.
21-09-27 14:23:11.012 - INFO: 1236                 - PSNR: 38.023045 dB;  PSNR_Y: 39.272251 dB; .
21-09-27 14:23:11.012 - INFO: 1236 - type1: 49 type2: 77 type3: 0 FLOPs: 16.178333333333335 Percent: 0.4962678936605317.
21-09-27 14:24:28.546 - INFO: 1237                 - PSNR: 21.013330 dB;  PSNR_Y: 22.333341 dB; .
21-09-27 14:24:28.546 - INFO: 1237 - type1: 0 type2: 103 type3: 23 FLOPs: 22.21825396825397 Percent: 0.6815415327685266.
21-09-27 14:26:28.618 - INFO: 1238                 - PSNR: 28.448459 dB;  PSNR_Y: 29.697537 dB; .
21-09-27 14:26:28.618 - INFO: 1238 - type1: 78 type2: 12 type3: 106 FLOPs: 22.959897959183674 Percent: 0.704291348441217.
21-09-27 14:27:45.459 - INFO: 1239                 - PSNR: 25.847905 dB;  PSNR_Y: 27.148047 dB; .
21-09-27 14:27:45.459 - INFO: 1239 - type1: 57 type2: 0 type3: 69 FLOPs: 22.52547619047619 Percent: 0.6909655273152205.
21-09-27 14:29:10.790 - INFO: 1240                 - PSNR: 26.737332 dB;  PSNR_Y: 28.247221 dB; .
21-09-27 14:29:10.790 - INFO: 1240 - type1: 22 type2: 10 type3: 94 FLOPs: 27.70365079365079 Percent: 0.8498052390690426.
21-09-27 14:30:24.577 - INFO: 1241                 - PSNR: 23.358366 dB;  PSNR_Y: 24.611877 dB; .
21-09-27 14:30:24.577 - INFO: 1241 - type1: 16 type2: 90 type3: 20 FLOPs: 20.70063492063492 Percent: 0.6349888012464698.
21-09-27 14:31:25.694 - INFO: 1242                 - PSNR: 28.130826 dB;  PSNR_Y: 29.299379 dB; .
21-09-27 14:31:25.694 - INFO: 1242 - type1: 98 type2: 8 type3: 20 FLOPs: 14.472539682539683 Percent: 0.44394293504722954.
21-09-27 14:32:47.343 - INFO: 1243                 - PSNR: 24.972863 dB;  PSNR_Y: 26.242256 dB; .
21-09-27 14:32:47.344 - INFO: 1243 - type1: 41 type2: 1 type3: 84 FLOPs: 25.252619047619046 Percent: 0.7746202161846333.
21-09-27 14:33:51.432 - INFO: 1244                 - PSNR: 27.971158 dB;  PSNR_Y: 29.459482 dB; .
21-09-27 14:33:51.433 - INFO: 1244 - type1: 90 type2: 10 type3: 26 FLOPs: 15.684920634920637 Percent: 0.4811325348135164.
21-09-27 14:34:51.209 - INFO: 1245                 - PSNR: 27.606255 dB;  PSNR_Y: 28.898799 dB; .
21-09-27 14:34:51.210 - INFO: 1245 - type1: 42 type2: 2 type3: 54 FLOPs: 22.796530612244897 Percent: 0.6992800801302116.
21-09-27 14:36:06.531 - INFO: 1246                 - PSNR: 25.845801 dB;  PSNR_Y: 27.053758 dB; .
21-09-27 14:36:06.531 - INFO: 1246 - type1: 81 type2: 19 type3: 40 FLOPs: 17.991642857142857 Percent: 0.5518908851884312.
21-09-27 14:37:27.663 - INFO: 1247                 - PSNR: 30.873553 dB;  PSNR_Y: 32.531972 dB; .
21-09-27 14:37:27.663 - INFO: 1247 - type1: 30 type2: 20 type3: 76 FLOPs: 25.28174603174603 Percent: 0.7755136819553997.
21-09-27 14:39:00.960 - INFO: 1248                 - PSNR: 22.668825 dB;  PSNR_Y: 23.945453 dB; .
21-09-27 14:39:00.960 - INFO: 1248 - type1: 4 type2: 0 type3: 122 FLOPs: 31.893015873015877 Percent: 0.9783133703379103.
21-09-27 14:40:10.499 - INFO: 1249                 - PSNR: 28.709954 dB;  PSNR_Y: 29.927834 dB; .
21-09-27 14:40:10.499 - INFO: 1249 - type1: 72 type2: 8 type3: 46 FLOPs: 19.067936507936512 Percent: 0.5849060278508132.
21-09-27 14:41:40.449 - INFO: 1250                 - PSNR: 23.381970 dB;  PSNR_Y: 24.990209 dB; .
21-09-27 14:41:40.449 - INFO: 1250 - type1: 9 type2: 9 type3: 108 FLOPs: 30.10214285714286 Percent: 0.9233786152497809.
21-09-27 14:41:58.020 - INFO: 1251                 - PSNR: 23.992353 dB;  PSNR_Y: 25.358032 dB; .
21-09-27 14:41:58.020 - INFO: 1251 - type1: 11 type2: 0 type3: 17 FLOPs: 23.85107142857143 Percent: 0.7316279579316389.
21-09-27 14:43:02.917 - INFO: 1252                 - PSNR: 23.340336 dB;  PSNR_Y: 24.195720 dB; .
21-09-27 14:43:02.917 - INFO: 1252 - type1: 9 type2: 32 type3: 57 FLOPs: 26.407857142857146 Percent: 0.810056967572305.
21-09-27 14:44:45.877 - INFO: 1253                 - PSNR: 27.266221 dB;  PSNR_Y: 28.741007 dB; .
21-09-27 14:44:45.877 - INFO: 1253 - type1: 35 type2: 8 type3: 111 FLOPs: 26.878896103896107 Percent: 0.8245060154569358.
21-09-27 14:46:14.475 - INFO: 1254                 - PSNR: 26.121330 dB;  PSNR_Y: 27.561475 dB; .
21-09-27 14:46:14.475 - INFO: 1254 - type1: 3 type2: 30 type3: 93 FLOPs: 29.045952380952382 Percent: 0.8909801343850423.
21-09-27 14:47:29.359 - INFO: 1255                 - PSNR: 27.392431 dB;  PSNR_Y: 28.974430 dB; .
21-09-27 14:47:29.359 - INFO: 1255 - type1: 37 type2: 44 type3: 45 FLOPs: 21.62547619047619 Percent: 0.6633581653520303.
21-09-27 14:48:59.105 - INFO: 1256                 - PSNR: 26.386311 dB;  PSNR_Y: 27.886569 dB; .
21-09-27 14:48:59.105 - INFO: 1256 - type1: 74 type2: 9 type3: 71 FLOPs: 21.156623376623376 Percent: 0.648976177197036.
21-09-27 14:50:08.909 - INFO: 1257                 - PSNR: 25.086784 dB;  PSNR_Y: 26.432296 dB; .
21-09-27 14:50:08.910 - INFO: 1257 - type1: 39 type2: 10 type3: 63 FLOPs: 23.711339285714285 Percent: 0.7273416958808062.
21-09-27 14:51:27.599 - INFO: 1258                 - PSNR: 27.272900 dB;  PSNR_Y: 29.346663 dB; .
21-09-27 14:51:27.599 - INFO: 1258 - type1: 86 type2: 49 type3: 19 FLOPs: 16.122597402597403 Percent: 0.49455820253366267.
21-09-27 14:52:40.204 - INFO: 1259                 - PSNR: 27.982127 dB;  PSNR_Y: 29.515364 dB; .
21-09-27 14:52:40.204 - INFO: 1259 - type1: 12 type2: 104 type3: 10 FLOPs: 19.996507936507935 Percent: 0.6133898140033108.
21-09-27 14:53:54.349 - INFO: 1260                 - PSNR: 24.299761 dB;  PSNR_Y: 25.396490 dB; .
21-09-27 14:53:54.349 - INFO: 1260 - type1: 31 type2: 60 type3: 35 FLOPs: 21.07325396825397 Percent: 0.6464188333820235.
21-09-27 14:55:25.934 - INFO: 1261                 - PSNR: 24.337896 dB;  PSNR_Y: 25.796542 dB; .
21-09-27 14:55:25.934 - INFO: 1261 - type1: 7 type2: 10 type3: 109 FLOPs: 30.35484126984127 Percent: 0.9311301003018794.
21-09-27 14:56:40.673 - INFO: 1262                 - PSNR: 24.950974 dB;  PSNR_Y: 26.268264 dB; .
21-09-27 14:56:40.674 - INFO: 1262 - type1: 59 type2: 4 type3: 63 FLOPs: 21.768809523809526 Percent: 0.6677548933683903.
21-09-27 14:57:52.009 - INFO: 1263                 - PSNR: 23.201029 dB;  PSNR_Y: 24.523791 dB; .
21-09-27 14:57:52.009 - INFO: 1263 - type1: 46 type2: 48 type3: 32 FLOPs: 19.631587301587302 Percent: 0.602195929496543.
21-09-27 14:59:15.369 - INFO: 1264                 - PSNR: 23.805525 dB;  PSNR_Y: 24.976370 dB; .
21-09-27 14:59:15.369 - INFO: 1264 - type1: 37 type2: 1 type3: 88 FLOPs: 25.959603174603178 Percent: 0.7963068458467232.
21-09-27 15:00:34.045 - INFO: 1265                 - PSNR: 24.119137 dB;  PSNR_Y: 25.586632 dB; .
21-09-27 15:00:34.045 - INFO: 1265 - type1: 20 type2: 1 type3: 105 FLOPs: 28.964285714285715 Percent: 0.8884750219106047.
21-09-27 15:01:42.625 - INFO: 1266                 - PSNR: 21.410869 dB;  PSNR_Y: 22.755776 dB; .
21-09-27 15:01:42.625 - INFO: 1266 - type1: 49 type2: 3 type3: 74 FLOPs: 23.637063492063493 Percent: 0.7250632973025611.
21-09-27 15:02:42.496 - INFO: 1267                 - PSNR: 25.263905 dB;  PSNR_Y: 26.608285 dB; .
21-09-27 15:02:42.496 - INFO: 1267 - type1: 20 type2: 58 type3: 34 FLOPs: 22.04642857142857 Percent: 0.676270815074496.
21-09-27 15:03:55.314 - INFO: 1268                 - PSNR: 25.356604 dB;  PSNR_Y: 26.687155 dB; .
21-09-27 15:03:55.314 - INFO: 1268 - type1: 69 type2: 6 type3: 65 FLOPs: 21.079785714285716 Percent: 0.6466191936897459.
21-09-27 15:05:03.415 - INFO: 1269                 - PSNR: 32.699003 dB;  PSNR_Y: 34.048300 dB; .
21-09-27 15:05:03.415 - INFO: 1269 - type1: 20 type2: 77 type3: 29 FLOPs: 21.303968253968254 Percent: 0.6534959587106826.
21-09-27 15:05:59.334 - INFO: 1270                 - PSNR: 34.677632 dB;  PSNR_Y: 36.059180 dB; .
21-09-27 15:05:59.334 - INFO: 1270 - type1: 67 type2: 54 type3: 5 FLOPs: 15.31515873015873 Percent: 0.46979014509689354.
21-09-27 15:07:27.024 - INFO: 1271                 - PSNR: 24.535031 dB;  PSNR_Y: 26.031903 dB; .
21-09-27 15:07:27.024 - INFO: 1271 - type1: 6 type2: 86 type3: 62 FLOPs: 24.64012987012987 Percent: 0.7558322046052106.
21-09-27 15:08:46.066 - INFO: 1272                 - PSNR: 22.877806 dB;  PSNR_Y: 24.533107 dB; .
21-09-27 15:08:46.067 - INFO: 1272 - type1: 6 type2: 12 type3: 108 FLOPs: 30.33 Percent: 0.9303680981595092.
21-09-27 15:09:49.126 - INFO: 1273                 - PSNR: 30.062065 dB;  PSNR_Y: 31.432453 dB; .
21-09-27 15:09:49.126 - INFO: 1273 - type1: 19 type2: 93 type3: 14 FLOPs: 19.86801587301587 Percent: 0.6094483396630634.
21-09-27 15:11:04.390 - INFO: 1274                 - PSNR: 28.953001 dB;  PSNR_Y: 30.311200 dB; .
21-09-27 15:11:04.390 - INFO: 1274 - type1: 30 type2: 113 type3: 11 FLOPs: 18.942857142857143 Percent: 0.5810692375109553.
21-09-27 15:11:53.812 - INFO: 1275                 - PSNR: 30.439239 dB;  PSNR_Y: 31.637234 dB; .
21-09-27 15:11:53.812 - INFO: 1275 - type1: 85 type2: 0 type3: 27 FLOPs: 15.698660714285714 Percent: 0.481554009640666.
21-09-27 15:13:33.285 - INFO: 1276                 - PSNR: 20.943342 dB;  PSNR_Y: 22.309201 dB; .
21-09-27 15:13:33.285 - INFO: 1276 - type1: 2 type2: 9 type3: 143 FLOPs: 31.56857142857143 Percent: 0.9683610867659947.
21-09-27 15:14:43.519 - INFO: 1277                 - PSNR: 25.129719 dB;  PSNR_Y: 26.813331 dB; .
21-09-27 15:14:43.519 - INFO: 1277 - type1: 20 type2: 45 type3: 61 FLOPs: 24.52936507936508 Percent: 0.7524345116369655.
21-09-27 15:15:23.778 - INFO: 1278                 - PSNR: 23.139778 dB;  PSNR_Y: 24.481086 dB; .
21-09-27 15:15:23.778 - INFO: 1278 - type1: 21 type2: 0 type3: 49 FLOPs: 25.919 Percent: 0.7950613496932515.
21-09-27 15:16:16.205 - INFO: 1279                 - PSNR: 27.048910 dB;  PSNR_Y: 28.422077 dB; .
21-09-27 15:16:16.205 - INFO: 1279 - type1: 31 type2: 21 type3: 46 FLOPs: 22.833979591836734 Percent: 0.7004288218354826.
21-09-27 15:17:28.984 - INFO: 1280                 - PSNR: 23.180117 dB;  PSNR_Y: 24.429041 dB; .
21-09-27 15:17:28.984 - INFO: 1280 - type1: 4 type2: 0 type3: 108 FLOPs: 31.80464285714286 Percent: 0.975602541630149.
21-09-27 15:18:45.473 - INFO: 1281                 - PSNR: 23.288237 dB;  PSNR_Y: 24.635620 dB; .
21-09-27 15:18:45.473 - INFO: 1281 - type1: 0 type2: 40 type3: 86 FLOPs: 28.568253968253966 Percent: 0.8763268088421462.
21-09-27 15:19:46.984 - INFO: 1282                 - PSNR: 23.799745 dB;  PSNR_Y: 25.040257 dB; .
21-09-27 15:19:46.984 - INFO: 1282 - type1: 6 type2: 9 type3: 83 FLOPs: 30.070204081632653 Percent: 0.9223988982095905.
21-09-27 15:20:49.049 - INFO: 1283                 - PSNR: 31.802906 dB;  PSNR_Y: 33.265130 dB; .
21-09-27 15:20:49.049 - INFO: 1283 - type1: 48 type2: 45 type3: 33 FLOPs: 19.58047619047619 Percent: 0.6006281040023371.
21-09-27 15:21:47.916 - INFO: 1284                 - PSNR: 26.702908 dB;  PSNR_Y: 28.020422 dB; .
21-09-27 15:21:47.916 - INFO: 1284 - type1: 81 type2: 5 type3: 40 FLOPs: 17.779603174603174 Percent: 0.5453866004479501.
21-09-27 15:22:51.464 - INFO: 1285                 - PSNR: 26.509620 dB;  PSNR_Y: 28.153254 dB; .
21-09-27 15:22:51.464 - INFO: 1285 - type1: 59 type2: 18 type3: 49 FLOPs: 20.357698412698415 Percent: 0.6244692764631415.
21-09-27 15:23:49.298 - INFO: 1286                 - PSNR: 28.036028 dB;  PSNR_Y: 29.386863 dB; .
21-09-27 15:23:49.299 - INFO: 1286 - type1: 61 type2: 50 type3: 15 FLOPs: 16.778809523809525 Percent: 0.5146874087058136.
21-09-27 15:24:48.384 - INFO: 1287                 - PSNR: 25.827867 dB;  PSNR_Y: 27.195216 dB; .
21-09-27 15:24:48.384 - INFO: 1287 - type1: 50 type2: 0 type3: 62 FLOPs: 22.658035714285713 Percent: 0.6950317703768624.
21-09-27 15:25:57.434 - INFO: 1288                 - PSNR: 22.031015 dB;  PSNR_Y: 23.406874 dB; .
21-09-27 15:25:57.434 - INFO: 1288 - type1: 45 type2: 6 type3: 75 FLOPs: 24.041666666666668 Percent: 0.7374744376278118.
21-09-27 15:27:33.688 - INFO: 1289                 - PSNR: 24.219071 dB;  PSNR_Y: 25.508394 dB; .
21-09-27 15:27:33.689 - INFO: 1289 - type1: 74 type2: 25 type3: 83 FLOPs: 21.80065934065934 Percent: 0.6687318816153172.
21-09-27 15:28:30.888 - INFO: 1290                 - PSNR: 30.028235 dB;  PSNR_Y: 31.293502 dB; .
21-09-27 15:28:30.888 - INFO: 1290 - type1: 94 type2: 1 type3: 31 FLOPs: 15.885079365079365 Percent: 0.4872723731619437.
21-09-27 15:29:33.787 - INFO: 1291                 - PSNR: 30.397440 dB;  PSNR_Y: 32.328675 dB; .
21-09-27 15:29:33.787 - INFO: 1291 - type1: 18 type2: 104 type3: 4 FLOPs: 18.936031746031748 Percent: 0.5808598695101763.
21-09-27 15:30:23.289 - INFO: 1292                 - PSNR: 28.149592 dB;  PSNR_Y: 29.660922 dB; .
21-09-27 15:30:23.289 - INFO: 1292 - type1: 61 type2: 0 type3: 37 FLOPs: 18.738061224489794 Percent: 0.5747871541254538.
21-09-27 15:31:06.732 - INFO: 1293                 - PSNR: 26.495053 dB;  PSNR_Y: 27.835583 dB; .
21-09-27 15:31:06.733 - INFO: 1293 - type1: 46 type2: 0 type3: 38 FLOPs: 20.40452380952381 Percent: 0.6259056383289512.
21-09-27 15:32:17.534 - INFO: 1294                 - PSNR: 26.459345 dB;  PSNR_Y: 27.854960 dB; .
21-09-27 15:32:17.535 - INFO: 1294 - type1: 18 type2: 55 type3: 53 FLOPs: 23.874920634920638 Percent: 0.7323595286785471.
21-09-27 15:33:03.053 - INFO: 1295                 - PSNR: 29.923672 dB;  PSNR_Y: 31.195336 dB; .
21-09-27 15:33:03.053 - INFO: 1295 - type1: 73 type2: 0 type3: 25 FLOPs: 16.01112244897959 Percent: 0.4911387254288218.
21-09-27 15:34:01.930 - INFO: 1296                 - PSNR: 25.319422 dB;  PSNR_Y: 26.428348 dB; .
21-09-27 15:34:01.930 - INFO: 1296 - type1: 36 type2: 41 type3: 35 FLOPs: 20.79267857142857 Percent: 0.6378122261174408.
21-09-27 15:34:58.758 - INFO: 1297                 - PSNR: 31.733822 dB;  PSNR_Y: 33.059932 dB; .
21-09-27 15:34:58.758 - INFO: 1297 - type1: 94 type2: 0 type3: 32 FLOPs: 15.985873015873016 Percent: 0.49036420294089006.
21-09-27 15:35:45.469 - INFO: 1298                 - PSNR: 30.106297 dB;  PSNR_Y: 31.637100 dB; .
21-09-27 15:35:45.469 - INFO: 1298 - type1: 66 type2: 0 type3: 32 FLOPs: 17.601836734693876 Percent: 0.5399336421685238.
21-09-27 15:36:32.604 - INFO: 1299                 - PSNR: 25.648451 dB;  PSNR_Y: 26.545650 dB; .
21-09-27 15:36:32.604 - INFO: 1299 - type1: 32 type2: 59 type3: 7 FLOPs: 17.682244897959183 Percent: 0.5424001502441467.
21-09-27 15:37:40.073 - INFO: 1300                 - PSNR: 28.083838 dB;  PSNR_Y: 29.401670 dB; .
21-09-27 15:37:40.073 - INFO: 1300 - type1: 42 type2: 29 type3: 55 FLOPs: 22.253650793650795 Percent: 0.6826273249586133.
21-09-27 15:37:40.074 - INFO: # Validation # Class num: 4218 3021 5081 all:12320
21-09-27 15:37:40.074 - INFO: # FLOPs 2.1861e+01 Percent 6.7059e-01
21-09-27 15:37:40.074 - INFO: ----Average PSNR results for test2k----
	PSNR: 26.352942 dB; 

